/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
body,html{height:100%}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;font-size:16px}body{margin:0;font-family:"Montserrat",Arial,sans-serif;font-weight:400;color:#303b40;overflow-x:hidden}.slick-slide img,article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}.slick-slide.slick-loading img,[hidden],template{display:none}a{background:0 0;display:inline-block;color:#303b40;text-decoration:none;-webkit-transition:.15s ease-out;-o-transition:.15s ease-out;transition:.15s ease-out}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0;max-width:100%;height:auto}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font:1em monospace,monospace}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}legend,td,th{padding:0}.slick-list,.slick-slider{position:relative;display:block}.slick-slider{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{-webkit-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.slick-track{position:relative;left:0;top:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}@font-face{font-family:"Montserrat";src:local("Montserrat-Regular"),url(../font/Montserrat-Regular.woff2) format("woff2"),url(../font/Montserrat-Regular.woff) format("woff");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:"Montserrat";src:local("Montserrat-Medium"),url(../font/Montserrat-Medium.woff2) format("woff2"),url(../font/Montserrat-Medium.woff) format("woff");font-weight:500;font-style:normal;font-display:swap}@font-face{font-family:"Montserrat";src:local("Montserrat-SemiBold"),url(../font/Montserrat-SemiBold.woff2) format("woff2"),url(../font/Montserrat-SemiBold.woff) format("woff");font-weight:600;font-style:normal;font-display:swap}@font-face{font-family:"Montserrat";src:local("Montserrat-ExtraBold"),url(../font/Montserrat-ExtraBold.woff2) format("woff2"),url(../font/Montserrat-ExtraBold.woff) format("woff");font-weight:800;font-style:normal;font-display:swap}@font-face{font-family:"Montserrat";src:local("Montserrat-Black"),url(../font/Montserrat-Black.woff2) format("woff2"),url(../font/Montserrat-Black.woff) format("woff");font-weight:900;font-style:normal;font-display:swap}*{-webkit-box-sizing:border-box;box-sizing:border-box}.wrapper{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:100%;overflow-x:hidden}.container{margin:0 auto;padding:0 15px;max-width:1140px;width:100%}h1,h2,h3,h4,h5,h6,p,ul{margin:0}a:hover{color:#f69a1b}ul{list-style:none;padding:0}.section{padding:50px 0}.title{font-size:2.5rem;font-weight:600;line-height:3.375rem;margin-bottom:30px}.subtitle{font-weight:800;text-transform:uppercase;color:#5477bb;line-height:1.875rem}.text{font-weight:600;line-height:2rem}.button{background:#5477bb;color:#fff;border:0;padding:14px 30px;text-transform:uppercase;-webkit-transition:.15s ease-out;-o-transition:.15s ease-out;transition:.15s ease-out}.button:hover{background:#4063a7;color:#fff}.hide{opacity:0;visibility:hidden}.text-orange{color:#f69a1b}.header{position:absolute;width:100%;z-index:10}.header__main,.header__phone{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__main{padding:20px 0;border-bottom:2px solid #5477bb}.header__phone{margin-left:auto;margin-right:32px;font-weight:500}.header__phone:hover .header__phone-icon path{fill:#f69a1b}.header__phone-icon path{-webkit-transition:.15s ease-out;-o-transition:.15s ease-out;transition:.15s ease-out}.header__phone-number{margin-left:10px}.header__button{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.logo{-webkit-transition:.15s ease-out;-o-transition:.15s ease-out;transition:.15s ease-out}.logo:hover{opacity:.7}.social-link,.social-links{display:-webkit-box;display:-ms-flexbox;display:flex}.social-link{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:60px;height:60px;margin-right:11px;border:1px solid #e8e8e8;-webkit-transition:.15s ease-out;-o-transition:.15s ease-out;transition:.15s ease-out}.social-link:hover{background:#f3f3f3}.nav{padding-top:20px}.nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.nav__link{text-transform:uppercase;font-size:.875rem;font-weight:600}.hero{min-height:877px;background:url(../img/hero-bg.png) top left no-repeat;background-size:contain}.hero__inner{position:relative;min-height:100%;display:grid;grid-template-columns:1fr 1fr;grid-template-rows:1fr 160px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-top:150px}.hero__main{max-width:450px;margin-left:auto}.hero__title{font-size:3.5rem;font-weight:600;line-height:4.375rem;margin-bottom:70px}.hero__list-item{position:relative;padding-left:10px;margin-left:15px;margin-bottom:15px}.hero__list-item::before{content:"";position:absolute;width:5px;height:5px;border-radius:50%;border:2px solid #f69a1b;top:53%;left:-10px;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.hero__feedback{grid-column:span 2}.hero__feedback-main{-ms-flex-preferred-size:40%;flex-basis:40%}.hero__feedback-text{text-transform:uppercase;font-weight:800;line-height:2rem;margin:0}.hero .container{height:100%}.feedback{background:#f69a1b;padding:32px 100px;color:#fff;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.feedback,.feedback__form{display:-webkit-box;display:-ms-flexbox;display:flex}.feedback__input{border:0;min-height:60px;max-width:264px;width:100%;margin-right:30px;padding:0 20px;color:#303b40}.feedback__input::-webkit-input-placeholder{color:silver}.feedback__input::-moz-placeholder{color:silver}.feedback__input:-ms-input-placeholder{color:silver}.feedback__input::-ms-input-placeholder{color:silver}.feedback__input::placeholder{color:silver}.about{background:url(../img/about-bg.png) top right no-repeat;background-size:contain}.about__inner{position:relative;padding-left:100px}.about__inner::after,.about__inner::before{background:#e8e8e8;content:"";position:absolute;width:1453px;height:1px;left:0}.about__inner::before{top:0}.about__inner::after{bottom:0}.about__row{padding:40px 100px;border-left:1px solid #e8e8e8}.about__row_bg-grey{background:#f6f8f9;padding:10px 100px}.about__row .text{margin:35px 0}.team{margin-top:100px}.team__inner{position:relative;padding-bottom:100px}.team__inner::after{background:#e8e8e8;content:"";position:absolute;width:1453px;height:1px;left:0;bottom:0}.team__header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.team__carousel{margin-top:45px}.team__member-name,.team__member-position{font-size:1.125rem;font-weight:400;text-align:center}.team__member-position{font-size:.875rem}.arrow{position:relative;width:60px;height:60px;border:1px solid #e8e8e8}.arrow:hover{background:#5477bb}.arrow:hover path{fill:#fff}.arrow,.arrow path{-webkit-transition:.1s ease-out;-o-transition:.1s ease-out;transition:.1s ease-out}.arrow.slick-disabled{opacity:.5}.arrow,.arrow.slick-disabled:hover{background:#f6f8f9}.arrow.slick-disabled:hover path{fill:#8c969a}.help{padding:100px 0}.help__row{z-index:2}.help__row_first{display:grid;grid-template-columns:3fr 2fr;grid-column-gap:30px}.help__text{font-weight:400;font-size:1.25rem}.help__conclusion{font-weight:600;font-size:1.75rem;line-height:2.75rem}.help__block-yellow{position:relative;max-width:550px;margin-left:auto;margin-top:200px}.block-grey__list-item::before,.help__block-yellow::after{content:"";position:absolute;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.help__block-yellow::after{width:1354px;height:560px;right:0;top:50%;background:url(../img/help-img.jpg) center no-repeat;z-index:-1}.block-grey{background:#f6f8f9;border:1px solid #e8e8e8;padding:43px 67px}.block-grey__title{color:#f69a1b;text-transform:uppercase;font-weight:800;font-size:1rem;line-height:1.875rem}.block-grey__header{position:relative}.block-grey__icon{position:absolute;left:-54px;top:-8px}.block-grey__list-item{position:relative;padding-left:10px;margin-left:12px;margin-bottom:15px}.block-grey__list-item::before{width:5px;height:5px;border-radius:50%;border:2px solid #f69a1b;top:53%;left:-10px}.block-yellow{background:#f69a1b;color:#fff;padding:60px}.block-yellow__title{font-weight:900;font-size:3.75rem;line-height:3.75rem;margin:0 0 24px}.block-yellow__text{font-size:1rem;font-weight:600;line-height:2rem;margin:0}.block-yellow__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-column-gap:50px;-moz-column-gap:50px;column-gap:50px}.services{padding:100px 0 50px}.services__title{margin-bottom:45px}.services__list{display:grid;grid-template-columns:1fr 1fr;grid-gap:30px}.services__list-item{padding-left:100px;padding-right:100px}.services .block-grey__title{color:#303b40}.outsourcing{position:relative;padding:50px 0 0}.outsourcing::before{content:"";position:absolute;width:829px;height:1265px;right:0;bottom:0;background:url(../img/outsourcing-bg.png) center no-repeat;background-size:contain;z-index:-1}.outsourcing__inner{position:relative;padding-bottom:100px;display:grid;grid-template-columns:7fr 3fr;grid-column-gap:30px}.outsourcing__inner::after{background:#e8e8e8;content:"";position:absolute;width:1453px;height:1px;left:0;bottom:0}.outsourcing__title{margin-bottom:30px}.outsourcing__text{font-weight:400}.suit{padding:75px 0 50px}.suit__inner{display:-webkit-box;display:-ms-flexbox;display:flex}.suit__title{line-height:1;margin-bottom:20px}.suit__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;min-height:160px;padding-left:40px;border-left:2px solid #5477bb}.suit__item:not(:last-child){margin-bottom:50px}.suit__item_first{padding-left:0;border-left:0}.suit__item-title{text-transform:uppercase;font-size:1rem;font-weight:800;line-height:1.875rem}.suit__item-text{font-weight:500;line-height:1.75rem}.suit__img-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-top:100px}.advantages{padding:50px 0;background:url(../img/advantages-bg.png) left top no-repeat;background-size:contain}.advantages__list{display:grid;grid-template-columns:1fr 1fr;grid-gap:30px;margin-bottom:100px}.advantages__item{display:-webkit-box;display:-ms-flexbox;display:flex}.advantages__item-content{margin-left:20px}.advantages__item-title{text-transform:uppercase;font-weight:800;margin-top:13px;margin-bottom:20px}.advantages__item-text{color:#8c969a;font-weight:500;font-size:1rem;line-height:1.75rem}.advantages__icon-block{background:rgba(246,154,27,.15);display:grid;place-items:center;width:50px;height:50px}.advantages__grow{padding:0 100px;border-top:1px solid #e8e8e8;border-bottom:1px solid #e8e8e8}.advantages__grow-inner{padding:60px 100px;background:#f6f8f9}.advantages__grow-title{margin-top:15px;font-size:1.75rem;line-height:2.75rem;font-weight:600;margin-left:100px}.steps{padding:50px 0}.steps__list{display:grid;grid-template-columns:repeat(3,1fr);grid-column-gap:30px;margin-bottom:65px}.steps__number{background:#5477bb;width:50px;height:50px;color:#fff;font-size:1.75rem;display:grid;place-items:center;margin-bottom:20px}.steps__item-title{font-size:1rem;font-weight:800;line-height:1.875rem;text-transform:uppercase;color:#f69a1b;margin-bottom:11px}.steps__item-text{font-size:1rem;font-weight:500;line-height:1.75rem}.steps__block-yellow{padding:60px 100px}.steps__block-yellow-title{font-size:1.75rem;font-weight:600;line-height:2.5rem}.steps__block-yellow-text{font-weight:500}.steps__block-yellow-button{min-width:220px;font-size:.875rem;padding:21px 30px}.blog{padding:50px 0}.blog__header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.blog__post{position:relative}.blog__post:hover .blog__post-img{-webkit-transform:scale(1.2);-ms-transform:scale(1.2);transform:scale(1.2)}.blog__img-wrapper{position:relative;overflow:hidden;margin-bottom:15px}.blog__post-img{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);-webkit-transition:.2s -webkit-transform ease-out;-o-transition:.2s transform ease-out;transition:.2s transform ease-out;transition:.2s transform ease-out,.2s -webkit-transform ease-out}.blog__post-date{background:#5477bb;position:absolute;left:10px;bottom:10px;padding:6px 17px;font-weight:400;font-size:.875rem;color:#fff;line-height:1.125rem}.blog__post-name{font-size:1.125rem;font-weight:400;line-height:1.75rem}.blog .slick-slide{margin:0 24px}.blog .slick-list{margin:0 -24px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */